plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'jacoco'
}

android {
    compileSdk 31


    defaultConfig {
        applicationId "com.merttoptas.cointracker"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    //Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //Lottie
    implementation "com.airbnb.android:lottie:$lottieVersion"

    //Json
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0"

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation platform('com.google.firebase:firebase-bom:29.0.0')

    //Firebase Authentication
    implementation 'com.google.firebase:firebase-auth:21.0.1'

    //Firebase Firestore
    implementation 'com.google.firebase:firebase-firestore:24.0.0'

    //Data Store
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    //Charts
    implementation 'com.github.AAChartModel:AAChartCore-Kotlin:-SNAPSHOT'

    //Shimmer

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1'
    testImplementation "com.google.truth:truth:1.1.3"

    //turbine
    testImplementation 'app.cash.turbine:turbine:0.6.0'

}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}


task jacocoTestReport(type: JacocoReport, dependsOn: ['testBetaUnitTest', 'createBetaCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*Module_*Factory.class']

    //java compiled classes
    def javaTree = fileTree(dir: "$project.buildDir/intermediates/javac/beta", excludes: fileFilter)
    //kotlin compiled classes
    def kotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/beta", excludes: fileFilter)

    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.from = files([javaTree, kotlinTree])
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'jacoco/testBetaUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ]))
}

task getCoverage(type: Exec, dependsOn: 'jacocoTestReport') {
    group = "Reporting"
    commandLine "open", "$buildDir/reports/jacoco/jacocoTestReport/html/index.html"
}